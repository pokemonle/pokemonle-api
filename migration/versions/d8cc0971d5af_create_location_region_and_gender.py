"""create location region and gender

Revision ID: d8cc0971d5af
Revises: 63149afd0582
Create Date: 2025-04-24 14:19:03.321087

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'd8cc0971d5af'
down_revision: Union[str, None] = '63149afd0582'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    genders = op.create_table('genders',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('identifier', sa.String(length=30), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('identifier')
    )
    regions = op.create_table('regions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('identifier', sa.String(length=30), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('identifier')
    )
    locations = op.create_table('locations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('region_id', sa.Integer(), nullable=True),
    sa.Column('identifier', sa.String(length=30), nullable=False),
    sa.ForeignKeyConstraint(['region_id'], ['regions.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('identifier')
    )
    region_names = op.create_table('region_names',
    sa.Column('region_id', sa.Integer(), nullable=False),
    sa.Column('local_language_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=30), nullable=False),
    sa.ForeignKeyConstraint(['local_language_id'], ['languages.id'], ),
    sa.ForeignKeyConstraint(['region_id'], ['regions.id'], ),
    sa.PrimaryKeyConstraint('region_id', 'local_language_id')
    )
    location_names = op.create_table('location_names',
    sa.Column('location_id', sa.Integer(), nullable=False),
    sa.Column('local_language_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('subtitle', sa.String(length=100), nullable=False),
    sa.ForeignKeyConstraint(['local_language_id'], ['languages.id'], ),
    sa.ForeignKeyConstraint(['location_id'], ['locations.id'], ),
    sa.PrimaryKeyConstraint('location_id', 'local_language_id')
    )

    from migration.tool import load_csv

    op.bulk_insert(genders, [
        { "id": 1, "identifier": "female"},
        { "id": 2, "identifier": "male"},
        { "id": 3, "identifier": "genderless"}
    ])

    with load_csv("regions") as csv_data:
        # id,identifier
        data = [
            {
                "id": int(row["id"]),
                "identifier": row["identifier"]
            }
            for row in csv_data
        ]
        op.bulk_insert(regions, data)

    with load_csv("locations") as csv_data:
        # id,region_id,identifier
        data = [
            {
                "id": int(row["id"]),
                "region_id": int(row["region_id"]) if row["region_id"] else None,
                "identifier": row["identifier"]
            }
            for row in csv_data
        ]
        op.bulk_insert(locations, data)

    with load_csv("region_names") as csv_data:
        # region_id,local_language_id,name
        data = [
            {
                "region_id": int(row["region_id"]),
                "local_language_id": int(row["local_language_id"]),
                "name": row["name"]
            }
            for row in csv_data
        ]
        op.bulk_insert(region_names, data)

    with load_csv("location_names") as csv_data:
        # location_id,local_language_id,name,subtitle
        data = [
            {
                "location_id": int(row["location_id"]),
                "local_language_id": int(row["local_language_id"]),
                "name": row["name"],
                "subtitle": row["subtitle"]
            }
            for row in csv_data
        ]
        op.bulk_insert(location_names, data)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('location_names')
    op.drop_table('region_names')
    op.drop_table('locations')
    op.drop_table('regions')
    op.drop_table('genders')
    # ### end Alembic commands ###
